#VRML V2.0 utf8  

WorldInfo 
{
	title "Nurbs Interpolator Test"
	info "Nurbs Patch animated by a NurbsInterpolator"
}


EXTERNPROTO NurbsPositionInterpolator [
  eventIn      SFFloat  set_fraction
  eventIn      MFFloat  set_knot
  eventIn      MFFloat  set_order
  eventIn      MFFloat  set_keyValue
  exposedField SFBool   fractionAbsolute 
  exposedField MFFloat  keyWeight        
  field MFFloat  knot					     
  field SFInt32  order					  
  field MFVec3f  keyValue				 
  eventOut     SFVec3f  value_changed 
]
[
	"urn:inet:blaxxun.com:node:NurbsPositionInterpolator",
	"nurbs.wrl#NurbsPositionInterpolator"  # for local testing
	"http://www.blaxxun.com/vrml/protos/nurbs.wrl#NurbsPositionInterpolator"
]

EXTERNPROTO NurbsSurface [
field        SFInt32  uDimension 
field        SFInt32  vDimension 
field        MFFloat  uKnot  
field        MFFloat  vKnot 
field        SFInt32  uOrder 
field        SFInt32  vOrder 
exposedField MFVec3f  controlPoint
exposedField MFFloat  weight
exposedField SFInt32  uTessellation
exposedField SFInt32  vTessellation
exposedField SFNode   texCoord
field        SFBool   ccw
field        SFBool   solid
]
[
	"urn:inet:blaxxun.com:node:NurbsSurface",
	"nurbs.wrl#NurbsSurface"  # for local testing
	"http://www.blaxxun.com/vrml/protos/nurbs.wrl#NurbsSurface"
]



NavigationInfo {
	type ["EXAMINE","ANY"]

}


Transform {
translation -1.5 -1.5 0
children [
	Shape { 
		geometry DEF nurb NurbsSurface {
			ccw FALSE
			solid FALSE
			uOrder 4 
			vOrder 4 
			uDimension 4 
			vDimension 4 
			uTessellation 16
			vTessellation 16
			uKnot [ 0, 0, 0, 0, 3, 3, 3, 3]
			vKnot [ 0, 0, 0, 0, 3, 3, 3, 3]
			controlPoint[ 0 0 0, 1 0 0, 2 0 0, 3 0 0,
					0 1 0, 1 1 0, 2 1 0, 3 1 0, 
					0 2 0, 1 2 0, 2 2 0, 3 2 0, 
					0 3 0, 1 3 0, 2 3 0, 3 3 0]
			weight [ 1.000000, 1.000000, 1.000000,
					1.000000, 1.000000, 1.000000,
					1.000000, 1.000000, 1.000000,
					2.000000, 1.000000, 1.000000,
					1.000000, 1.000000, 1.000000, 1.000000,]
 			}
			appearance Appearance {
            		material Material { 
						diffuseColor 0 0 1 
						specularColor 1 1 1
  					    emissiveColor 1 0 0

					} 
					texture ImageTexture {url "texture.jpg"}
     				}
	}	
]
}

DEF TimeSource TimeSensor { cycleInterval 2.0 loop TRUE} 

DEF interpolator NurbsPositionInterpolator {
	order 4
	keyValue[0 0 0, 0 0 2, 1 1 0, 0 0  -2, 0 0 0]
	knot[0, 0, 0, 0, 1, 2, 2, 2, 2]
}

DEF script Script {
	eventIn SFVec3f setVec
	eventOut SFVec3f VecChanged
	field SFNode nurb USE nurb 
	directOutput TRUE
    url "javascript:
        function setVec(value) {
			nurb.controlPoint[0] = value;		
	}
    "	
}

ROUTE TimeSource.fraction_changed TO interpolator.set_fraction
ROUTE interpolator.value_changed TO script.setVec

