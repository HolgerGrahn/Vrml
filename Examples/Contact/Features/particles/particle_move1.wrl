#VRML V2.0 utf8


EXTERNPROTO Particles[
            exposedField SFVec3f bboxSize
            exposedField SFVec3f bboxCenter
            exposedField SFFloat lodRange
            exposedField SFBool enabled
            exposedField SFFloat particleRadius
            exposedField SFNode geometry
            exposedField SFVec3f emitterPosition
            exposedField SFFloat emitterRadius
            exposedField SFFloat emitterSpread
            exposedField SFVec3f emitVelocity
            exposedField SFFloat emitVelocityVariation
            exposedField SFRotation emitterOrientation
            exposedField SFFloat creationRate
            exposedField SFFloat creationRateVariation
            exposedField SFInt32 maxParticles
            exposedField SFTime maxLifeTime
            exposedField SFFloat maxLifeTimeVariation
            exposedField SFVec3f gravity
            exposedField SFVec3f acceleration
            exposedField SFColor emitColor
            exposedField SFColor fadeColor
            exposedField SFFloat fadeAlpha
            exposedField SFFloat fadeRate
            exposedField SFInt32 numTrails
            exposedField SFInt32 numSparks
            exposedField SFVec3f sparkGravity
            exposedField SFColor sparkFadeColor
            ]
        ["urn:inet:blaxxun.com:node:Particles","http://www.blaxxun.com/vrml/protos/nodes.wrl#Particles","nodes.wrl#Particles"]

WorldInfo{
 title "Particles"
 info[
        "Contact 4.4 Particle system test"
 ]
}

NavigationInfo {
    visibilityLimit 200
    avatarSize [0.5 1.75 0.6 ]  
}

DEF TS TimeSensor {
    enabled TRUE
    loop TRUE
    cycleInterval 15
}

Viewpoint 
{
    position 0 1.75 15  
    fieldOfView 1.0
    description "Entry"
}

DEF Background Background { skyColor 0.2 0.2 0.4 }
# to do Katmai lighting & FOG ????????
#DEF Fog Fog2 { 
#       fogType "LINEAR" 
#       visibilityRange 150
#       visibilityStart 10 
#       color 0.2 0.2 0.4
#       #color 0.3 0.3 0.3
#}
PROTO KnotPositionInterpolator 
[

        eventOut    SFVec3f      value_changed
        eventIn     SFFloat      set_fraction
        
        eventIn     SFInt32 set_knotu
        eventIn     SFInt32 set_knotv

        field       SFVec3f position 0 0 0
        
        field       SFVec3f radius  1 1 1  
        field       SFInt32 knotu 1
        field       SFInt32 knotv 7

]

{
    DEF Mover Script {
      eventOut   SFVec3f    value_changed IS value_changed
      eventIn    SFFloat    set_fraction IS set_fraction
      field      SFVec3f    radius  IS radius 
      field      SFVec3f    position IS position
      field      SFFloat    turns   4
      
      eventIn     SFInt32   set_knotu IS set_knotu
      eventIn     SFInt32   set_knotv   IS set_knotv
      
      field     SFInt32     knotu IS knotu
      field     SFInt32     knotv IS knotv
      
      
      url   "vrmlscript:

function set_knotu(value, time) {
     knotu = value;
 }

 function set_knotv(value, time) {
     knotv = value;
}     
      function set_fraction_circle( fraction, eventTime ) 
      {
         var r = radius+Math.sin(fraction * Math.PI);
           value_changed = new SFVec3f(fraction,
            radius * Math.sin( turns * fraction * 6.28 ),
            radius * Math.cos( turns * fraction * 6.28 ));
        }

      function set_fraction( fraction, eventTime ) {
        
        var angleOffset = 0;  
        var t= 2.0* fraction* Math.PI;
        //var knotu=1;
        //var knotv=7;
        
        // knot http://www.mhri.edu.au/~pdb/geometry/knot/
        var r =  (0.8 + 1.6 * Math.sin(knotu * t));
        var theta = 2 * t;
        var phi = 0.6 * Math.PI * Math.sin(knotv * t); 
        
        value_changed = new SFVec3f(position.x+r*radius.x * Math.cos(phi) * Math.cos(theta),
                            position.y+r*radius.y * Math.cos(phi) * Math.sin(theta),
                            position.z+r*radius.z * Math.sin(phi)
                          ); 
    }
        
    "
    }
}   



DEF PS-T Transform {
children  DEF ROOT-SHAPE  Shape {
    appearance  Appearance {
        #material Material { 
		#			##transparency 0.1 
		#			emissiveColor 1 0.5 0.5 
		#			}
        texture DEF PS-TEX ImageTexture { url [ 
				"../textures/part2gray.png"
                ##"particle.png" 
                "particle_t.png" 
                "partikel.png" 
                ## "shine1.png" 
                ##"flare2.png"
                ]
                }
            
    }
    geometry DEF PS Particles 
    {
        bboxSize -1 -1 -1 
                    particleRadius 0.3
                    emitterPosition 0 10 0
                    emitterRadius 0
                    emitterSpread 0.5
                    emitVelocity 4 5 4
                    creationRate 500
                    creationRateVariation 0 ##0.5   
                    lodRange 1000
                    maxParticles  2500
                    maxLifeTime 3
                    acceleration 1 1 1
                    emitColor 1 0.082353 0.082353
                    fadeColor 0.976471 0.976471 0
                    fadeAlpha 0
                    fadeRate 0.5
                    #numTrails 4
					numTrails 0
                    numSparks 3
            		sparkFadeColor 0.007843 0.215686 0.709804
    }
}
}

Switch {
whichChoice -1
choice 
DEF Mirror  Transform {
    #translation 10 0 0
    scale 1 -1 1 # to do cullcheck on PS  does not work with neg scale !
    children 
        #USE PS-T
    Shape {     
        appearance  Appearance {
            material Material { transparency 0.7  diffuseColor 0 0 0 emissiveColor 0.5 0.5 0.5 
                               }
            texture USE PS-TEX 
        }
        geometry USE PS 
    }       
    
}
}

Switch {
whichChoice -1
choice 
DEF Shadow  Transform {
    #translation 10 0 0
    scale 1 0 1 
    children 
    Shape {     
        appearance  Appearance {
            material Material { transparency 0.5  diffuseColor 0 0 0 emissiveColor 0.5 0.5 0.5 
                               }
            #texture USE PS-TEX 
        }
        geometry USE PS 
    }       
    
}
}

DEF ROOT Group { }

DEF Ground Transform {
    scale 50 50 50
    translation 0 0.01 0
    children [
        Shape {
            appearance Appearance { 
                material Material { diffuseColor 0 0 0 emissiveColor 1 1 1 
                    ##transparency 0.2 
                }
                texture ImageTexture { url "../textures/gray_ground.jpg" }
                textureTransform TextureTransform { scale 10 10 }
            }
            geometry DEF Square IndexedFaceSet {
                solid FALSE
                coord Coordinate {
                point [ -1 0 -1,
                        1 0 -1,
                        1 0 1,
                        -1 0 1 ]
                }
                texCoord TextureCoordinate {
                    point [ 0 0, 
                            1 0,
                            1 1,
                            0 1 ]
                }
                coordIndex [ 0, 1, 2, 3, -1 ]
            }
        }
    ]
}



DEF PS-translation PositionInterpolator {
    keyValue [ 0 0 0,0 0 0]
}

DEF Trail KnotPositionInterpolator {
        radius 20 8 20
        position 0 12 0
        #knotu 3
        knotv 7

}

DEF MovingVP-T Transform {
    children 
    DEF VP2 Viewpoint {
        fieldOfView 1
        orientation -0.981122 -0.192668 -0.0167079 0.177903
        position -1.07381 1  4.28877
        description "Moving Viewpoint"
    }       
}

ROUTE TS.fraction_changed TO Trail.set_fraction
ROUTE Trail.value_changed TO PS.set_emitterPosition
ROUTE Trail.value_changed TO PS.set_bboxCenter
ROUTE Trail.value_changed TO MovingVP-T.set_translation
#ROUTE Trail.value_changed TO PS-T.set_translation 


# Painting on test 
#Script {
#	mustEvaluate TRUE
#	url	"javascript:
#	function initialize() 
#	{
#		// do no clear screen 
#		Browser.setOption('clear','FALSE');
#	}
#	function shutdown() 
#	{
#		Browser.setOption('clear','TRUE');
#	}
#	"
#}

################## 


## DropHandler

EXTERNPROTO DropHandler [
	field SFNode root  
	field SFNode rootShape 

] "../event/drop/drophandler.wrl#DropHandler"

################ DropHandler
DropHandler	{ 
	root USE ROOT	
	rootShape	USE ROOT-SHAPE 
}



